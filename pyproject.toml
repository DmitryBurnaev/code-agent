[project]
name = "code-agent"
version = "0.1.0"
description = "FastAPI application providing system information"
requires-python = ">=3.13"
dependencies = [
    "fastapi==0.115.12",
    "uvicorn==0.34.0",
    "pydantic==2.11.1",
    "pydantic-settings==2.8.1",
    "httpx==0.28.1",
]

[project.optional-dependencies]
test = ["pytest==8.3.5"]

# [build-system]
# requires = ["hatchling"]
# build-backend = "hatchling.build"

# [tool.ruff]
# line-length = 100
# target-version = "py313"
# select = ["E", "F", "I", "N", "W", "B", "UP", "RUF"]

# [tool.ruff.isort]
# known-first-party = ["app"]

[tool.pytest.ini_options]
testpaths = ["app/tests"]
python_files = ["test_*.py"]


# === Ruff settings ====

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
    ".idea/",
]

# Same as Black.
line-length = 100
indent-width = 4
target-version = "py313"

[tool.black]
line-length = 100
target-version = ['py313']

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# ===

[tool.mypy]
strict = true
exclude = ['src/tests', 'alembic', '.local']
