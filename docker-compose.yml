services:
  api:
    build:
      context: .
      target: "service"
    ports:
      - "127.0.0.1:8003:8000"
    env_file:
      - .env
    environment:
      APP_SERVICE: "web"
      APP_HOST: "0.0.0.0"
      APP_PORT: "8000"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USERNAME: "code-agent"
      DB_PASSWORD: "YXKxYfY87puI"
      DB_DATABASE: "code_agent"
    volumes:
      - ${PWD}/src:/app/src
    depends_on:
      postgres:
        condition: service_healthy        
    restart: unless-stopped 

  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: code-agent
      POSTGRES_PASSWORD: YXKxYfY87puI
      POSTGRES_DB: code_agent
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - ${PWD}/.local/postgres:/var/lib/postgresql/data/pgdata

  test:
    image:
      code-agent:test
    build:
      context: .
      target: "tests"
      args:
        DEV_DEPS: "true"
    environment:
      - APP_SERVICE=test
    volumes:
      - ${PWD}/.local:/app/.local

  lint:
    image:
      code-agent:test
    build:
      context: .
      target: "tests"
      args:
        DEV_DEPS: "true"
    environment:
      - APP_SERVICE=lint
